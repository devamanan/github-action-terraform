name: Terraform CI/CD

on:
  workflow_dispatch:
    inputs:
      terraform_action:
        type: choice
        description: "Select Terraform action"
        options:
          - apply
          - destroy
        required: true
  push:
    branches:
      - main  # Runs when code is pushed to the 'main' branch
  pull_request:
    branches:
      - main  # Runs on PRs to 'main'

jobs:
  terraform:
    name: 'Terraform Deployment'
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write  # Required for OIDC authentication (optional)

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_DEVOPS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_DEVOPS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.6  # Specify the Terraform version

      - name: Terraform Init
        run: terraform init 

      - name: Terraform Validate
        run: terraform validate 

      # Plan for Apply
      - name: Terraform Plan (Apply)
        if: ${{ github.event.inputs.terraform_action == 'apply' }}
        run: terraform plan -out=tfplan -var="instance_type=t2.micro"

      # Apply Terraform changes
      - name: Terraform Apply
        if: ${{ github.ref == 'refs/heads/main' && github.event.inputs.terraform_action == 'apply' }}
        run: terraform apply -auto-approve tfplan  # No -var here!

      # Plan for Destroy
      - name: Terraform Plan (Destroy)
        if: ${{ github.event.inputs.terraform_action == 'destroy' }}
        run: terraform plan -destroy -out=tfplan

      # Destroy Terraform resources
      - name: Terraform Destroy
        if: ${{ github.ref == 'refs/heads/main' && github.event.inputs.terraform_action == 'destroy' }}
        run: terraform destroy -auto-approve
